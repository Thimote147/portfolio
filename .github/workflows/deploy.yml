name: Deploy to Production

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  dependency-submission:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Submit Dependencies
        run: echo "Submitting build-time dependencies..."

  build-and-push:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/thimote147/portfolio:latest
            ghcr.io/thimote147/portfolio:${{ github.sha }}

  deploy:
    needs: build-and-push
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Set up SSH key and known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SUDO_PASSWORD: ${{ secrets.SUDO_PASSWORD }}
        run: |
          ssh -t -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 $SERVER_USER@$SERVER_HOST << 'EOF'
            set -e

            PORT=7777
            APP_DIR="/home/$SERVER_USER/websites/portfolio"
            IMAGE="ghcr.io/thimote147/portfolio:latest"

            echo "$SUDO_PASSWORD" | sudo -S mkdir -p $APP_DIR

            echo "$SUDO_PASSWORD" | sudo -S rm -rf $APP_DIR/docker-compose.yml || true

            cat > $APP_DIR/docker-compose.yml << COMPOSE_EOF
